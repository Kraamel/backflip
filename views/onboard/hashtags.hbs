<div class="main">
  <form class="pure-form pure-form-stacked" action="{{onboard.hashtagsAction}}" method="post">
    <input type="hidden" name="_id" value="{{record._id}}" />
    {{> form_errors}}
    <div class="pure-g">
      <div class="pure-u-1">
        <div class="search-input-box" class="grid-box">
          <label for="hashtag">{{__ "What are you good at? What do you love? Where do you belong?"}}</label>
          <i class="fa fa-share" aria-hidden="true"></i>
          <input class="pure-input-1 search-input" id="search-input" type="text" placeholder="{{__ 'Add hashtag'}}" autofocus>
        </div>
        <div class="grid-box">
          <ul class="cloud" id="hashtag-cloud">
            {{#record.hashtags}}
            {{> hashtag}}
            {{/record.hashtags}}
          </ul>
          <input type="hidden" name="hashtags" value="end_of_hashtag_cloud" />
          <p class="cloud-howto">{{__ "The first three will be displayed in search results. Drag to add and reorder."}}</p>
        </div>
      </div>
    </div>
    <div class="pure-g">
      <h3 class="suggested">{{__ "Suggested"}}</h3>
      <div class="pure-u-1 pure-u-suggestions">
        <a onclick="goRight" class="fa fa-chevron-right scroll-right" aria-hidden="true"></a>
        <a onclick="goLeft" class="fa fa-chevron-left scroll-left" aria-hidden="true"></a>
        <div class="grid-box suggestions-box">
          <ul id="hashtag-suggestions" class="scroll">
            {{#hashtagSuggestions}}
            {{> hashtag}}
            {{/hashtagSuggestions}}
          </ul>
        </div>
      </div>
    </div>
    <div class="bottom-buttons">
      <div class="pure-g">
        <div class="pure-u-1-2 pure-u-md-1-3">
          <div class="grid-box">
            <a class="pure-button scale back-button" href="{{onboard.introAction}}">{{{__ "Back"}}}</a>
          </div>
        </div>
        <div class="pure-u-1-2 pure-u-md-2-3">
          <div class="grid-box">
            <button type="submit" class="pure-button scale">{{{__ "Next"}}}</button>
          </div>
        </div>
      </div>
    </div>
  </form>
  <div class="illustration birds">
  </div>
</div>
<div id="modal-layer">
</div>
<script src="https://cdn.jsdelivr.net/algoliasearch/3/algoliasearch.min.js"></script>
<script src="https://cdn.jsdelivr.net/autocomplete.js/0/autocomplete.min.js"></script>
<script>
  var algoliaPublicKey = {{{json algoliaPublicKey}}};
  var newHashtagSentence = '{{__ "Create new hashtag"}}';
  var notFoundSentence = '{{__ "There is no matching hashtag... yet!"}}';
  var isProduction = {{{json isProduction}}};
</script>
<script>
  var cloudUl = document.getElementById('hashtag-cloud');
  var suggestionsUl = document.getElementById('hashtag-suggestions');
  var searchInput = document.getElementById('search-input');
  var modalLayer = document.getElementById('modal-layer');
</script>
<script>
  function addHashtagToCloud(event, suggestion, dataset) {
    cloudUl.insertAdjacentHTML('beforeend',
      '<li class="cloud-element hashtag added">' +
      '<input type="hidden" name="hashtags" value="' + (suggestion.objectID || suggestion.tag) + '" />'+
      getPictureHtml(suggestion) +
      '<span>' +
      (suggestion.name || suggestion.tag) +
      '</span>' +
      '<a class="js-remove">x</a>' +
      '</li>'
    );
    search.autocomplete.setVal('');
  }

  function suggestionTemplate(suggestion) {
    if (suggestion.type === 'newHashtag') {
      return ' <span class="newHashtag">' +
      newHashtagSentence +
      ' </span><em><i class="fa fa-hashtag" aria-hidden="true"></i>' +
      suggestion.tag +
      '</em>';
    } else {
      return getPictureHtml(suggestion) +
      suggestion._highlightResult.name.value;
    }
  }
</script>
<script>
  var ALGOLIA_APPID = 'RSXBUBL0PB';
  var ALGOLIA_SEARCH_APIKEY = algoliaPublicKey.value;
  var ALGOLIA_INDEX_NAME = 'world';
  var NB_RESULTS_DISPLAYED = 3;
  var client = algoliasearch(ALGOLIA_APPID, ALGOLIA_SEARCH_APIKEY);
  var index = client.initIndex(ALGOLIA_INDEX_NAME);
  var hitsSource = autocomplete.sources.hits(index, {facetFilters: 'type:hashtag', hitsPerPage: NB_RESULTS_DISPLAYED });
  var search = autocomplete('#search-input', { hint: false, autoselect: true, autoselectOnBlur: true, debug: !isProduction}, [
    {
      source: function(query, callback) {
        hitsSource(query, function(suggestions) {
          suggestions.push({type:'newHashtag', tag: query, name: query})
          callback(suggestions);
        });
      },
      name: 'hashtag-suggestions',
      templates: {
        suggestion: suggestionTemplate
      }
    }
  ]).on('autocomplete:selected', addHashtagToCloud)
  .on('autocomplete:shown', function() {
    searchInput.classList.add('open');
    modalLayer.classList.add('show');
  })
  .on('autocomplete:closed', function() {
    searchInput.classList.remove('open');
    modalLayer.classList.remove('show');
  });
</script>

<script src="/javascripts/Sortable.min.js"></script>
<script>
  var animationSpeed = 200;
  var cloud = Sortable.create(
    cloudUl,
    {
      group: {name: "hashtags", pull: false, put: true},
      animation: animationSpeed,
      draggable: '.hashtag',
      filter: ".js-remove",
      onFilter: function (evt) {
      	var item = evt.item, ctrl = evt.target;

      	if (Sortable.utils.is(ctrl, ".js-remove")) {  // Click on remove button
      		item.parentNode.removeChild(item); // remove sortable item
      	}
      }
    }
  );
  var suggestions = Sortable.create(
    suggestionsUl,
    {
      group: {name: "hashtags", pull: true, put: false},
      sort: false,
      animation: animationSpeed,
      draggable: '.hashtag',
      filter: ".js-remove",
      onFilter: function (evt) {
      	var item = evt.item, ctrl = evt.target;

      	if (Sortable.utils.is(ctrl, ".js-remove")) {  // Click on remove button
      		item.parentNode.removeChild(item); // remove sortable item
      	}
      }
    }
  );
</script>
